@using Economiq.Client.Service
@using Economiq.Shared.DTO
@inject ExpenseService _expenseService
<style>.Hoover:focus, .Hoover:hover{font-weight: bold;} .Hoover {cursor:pointer}</style>
@inject IJSRuntime JsRuntime
    

@if(loading){
    <div class="spinner-grow" style="width: 3rem; height: 3rem; color: rebeccapurple;" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else {
<table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
                <th>Recipient</th>
                 <th>Delete expense</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in _expenses)
            {
                <tr>
                    <td>@expense.Title</td>
                    <td>@expense.Amount</td>
                    <td>@expense.categoryName</td>
                    <td>@expense.ExpenseDate</td>
                    <td>@expense.RecipientName</td>
                    
                    <td @onclick="PrintToConsole" class="Hoover">X</td>
                </tr>
            }
        </tbody>
    </table>
 }
@code {
    private List<GetExpenseDTO> _expenses = new();
    private bool loading = true; 
    protected override async Task OnInitializedAsync()
    {
        _expenses = await _expenseService.GetExpenses();
        loading = false; 
    }

    public async Task RefreshList()
    {
        _expenses = await _expenseService.GetExpenses();
        StateHasChanged();
    }

    public async void PrintToConsole()
    {
        
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this expense?");
    }
}

