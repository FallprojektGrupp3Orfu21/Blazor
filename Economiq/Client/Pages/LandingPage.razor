@page "/"
@using Economiq.Client.Components.Modals
@inject NavigationManager _nav;
@inject AppState _appState
@inject NavigationManager NavigationManager
@implements IDisposable
<style>
    .hover {
        cursor: pointer;
    }
    .logo{
        display: flex;
        justify-content: center;
        z-index:10;
        color: white;
        font-size: 40px;
        font-family: Comfortaa;
     
    }
    .logo_links{
        display:flex;
        justify-content: center;


    }

    .logo_links2 {
        display: flex;
        justify-content: center;
        color: white;
    }
    .welcome{
        color:white;
    }
</style>

<AuthorizeView>
    <Authorized>
        <h2 class="welcome">Welcome @context.User.Identity.Name</h2>
    </Authorized>
    <NotAuthorized>
        @if (aboutUs)
        {
            <LandingPageModal CloseModal="@CloseModal"></LandingPageModal>

        }
      <br /><br /><br /><br /> <br /><br /><br /><br /><br /><br />

        <div class="logo">
            <p>Economiq</p>
      
        </div>
        <br /><br /><br /><br /><br /><br /><br />

        <div class="logo_links">

            <button class="btn btn-primary" @onclick="@(NavigateRegister)">Register</button>&nbsp;&nbsp;&nbsp;
            <button class="btn btn-primary" @onclick="Login">Log in</button>
         
          
        </div>  <br />     <div class="logo_links2">
        <p>About us <span class="hover" @onclick="@(ShowModal)">+</span></p></div>
        <br /><br /><br /><br /><br /><br /><br /><br />

    </NotAuthorized>
</AuthorizeView>



@code {
    private bool aboutUs = false;

    public void NavigateRegister()
    {
        _nav.NavigateTo("/register");
    }

    public void ShowModal()
    {
        aboutUs = true;
    }

    public void CloseModal()
    {
        aboutUs = false;
    }

    protected override async Task OnInitializedAsync()
    {
        _appState.SetPageTitle("Economiq");
        _appState.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        _appState.OnStateChange -= StateHasChanged;
    }
    void Login()
    {
        NavigationManager.NavigateTo("login");
    }
}
